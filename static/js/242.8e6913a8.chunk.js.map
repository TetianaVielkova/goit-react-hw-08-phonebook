{"version":3,"file":"static/js/242.8e6913a8.chunk.js","mappings":"uQAEaA,EAAQC,EAAAA,GAAAA,MAAH,yIAQLC,EAAQD,EAAAA,GAAAA,MAAH,wFAMLE,EAAOF,EAAAA,GAAAA,KAAH,sGAMJG,EAASH,EAAAA,GAAAA,OAAH,wkB,UCtBNI,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,OAAOA,MAAjB,E,mBCEpBC,EAAc,WACvB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXf,GAAWgB,EAAAA,EAAAA,IAAYlB,GA2B7B,OACI,UAACF,EAAD,CAAMqB,SAnBW,SAAAC,GACjBA,EAAMC,iBAEN,IAAMC,EAAepB,EAASqB,MAC1B,SAAArB,GAAQ,OAAKA,EAASU,KAAKY,gBAAkBZ,EAAKY,aAA1C,IAEZ,GAAIF,EACAG,MAAM,GAAD,OAAIb,EAAJ,iCADT,CAIA,IAAMc,EAAU,CAACd,KAAAA,EAAME,OAAAA,EAAQa,IAAIC,EAAAA,EAAAA,OAC/BZ,GAASa,EAAAA,EAAAA,IAAiBH,IAE9Bb,EAAQ,IACRE,EAAU,GALT,CAMJ,EAIG,WACI,UAACpB,EAAD,mBACI,SAACE,EAAD,CACAiC,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAlCa,SAAAd,GACrBP,EAAQO,EAAMe,OAAOC,MACxB,EAiCWA,MAAOxB,QAGX,UAACjB,EAAD,qBACA,SAACE,EAAD,CACIiC,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SA1Ce,SAAAd,GACvBL,EAAUK,EAAMe,OAAOC,MAC1B,EAyCWA,MAAOtB,QAGX,SAACf,EAAD,CAAQ+B,KAAK,SAAb,2BAGX,EChEYO,EAAOzC,EAAAA,GAAAA,GAAH,wBAEJ0C,EAAO1C,EAAAA,GAAAA,GAAH,mJAOJ2C,EAAY3C,EAAAA,GAAAA,OAAH,oiBCJT4C,EAAc,WAEvB,IAAMtC,GAAWgB,EAAAA,EAAAA,IAAYlB,GACvBS,GAASS,EAAAA,EAAAA,IAAYV,GACrBQ,GAAWC,EAAAA,EAAAA,MACXZ,GAAYa,EAAAA,EAAAA,IAAYd,GACxBG,GAAQW,EAAAA,EAAAA,IAAYZ,IAG1BmC,EAAAA,EAAAA,YAAU,WACVzB,GAAS0B,EAAAA,EAAAA,MACR,GAAE,CAAC1B,IAEJ,IAAM2B,EAAmBzC,EAASO,QAAO,SAAAiB,GAAO,OAChDA,EAAQd,KAAKY,cAAcoB,SAASnC,EAAOe,cADK,IAGhD,OACI,UAACa,EAAD,WACKhC,IAAcE,IAAS,sCACvBA,IAAS,uBAAIA,EAAMsC,UACnBF,EAAiBG,KAAI,gBAAEnB,EAAF,EAAEA,GAAIf,EAAN,EAAMA,KAAME,EAAZ,EAAYA,OAAZ,OAClB,UAACwB,EAAD,WAAgB1B,EAAhB,KAAwBE,GACxB,SAACyB,EAAD,CACIT,KAAK,SAASiB,QAAS,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAoBrB,GAAnC,EAD3B,sBADWA,EADO,MASjC,EClCYsB,EAAYrD,EAAAA,GAAAA,IAAH,6PAUTsD,EAAQtD,EAAAA,GAAAA,GAAH,oNAOLuD,EAAWvD,EAAAA,GAAAA,GAAH,oN,UCjBRD,EAAQC,EAAAA,GAAAA,MAAH,sHAOLC,EAAQD,EAAAA,GAAAA,MAAH,wFCJLwD,EAAS,WAClB,IAAMpC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,0BACI,UAAC,EAAD,oCACI,SAAC,EAAD,CACAoC,aAAa,MACbvB,KAAK,OACLlB,KAAK,SACLsB,SAAU,SAAAd,GAAK,OAAIJ,GAASsC,EAAAA,EAAAA,GAAqBlC,EAAMe,OAAOC,MAAMZ,eAArD,QAK9B,ECXc,SAAS+B,IACpB,IAAMvC,GAAWC,EAAAA,EAAAA,MACXZ,GAAYa,EAAAA,EAAAA,IAAYd,GAM9B,OAJAqC,EAAAA,EAAAA,YAAU,WACNzB,GAAS0B,EAAAA,EAAAA,MACZ,GAAE,CAAC1B,KAGJ,+BACI,UAACiC,EAAD,YACA,SAACC,EAAD,yBACA,SAACxC,EAAD,KACA,SAACyC,EAAD,wBACA,SAACC,EAAD,KACA,yBAAM/C,GAAa,4BACnB,SAACmC,EAAD,QAIP,C","sources":["components/ContactForm/ContactForm.styled.jsx","redux/Contacts/contacts.selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/App.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    font-size: 20px;\n    font-weight: 500;\n`\n\nexport const Input = styled.input`\n    font-size: 20px; \n    margin: 10px 0; \n    width: 250px;\n`\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    border: 2px solid #000;\n`\n\nexport const Button = styled.button`\n    margin: 0  20px 20px 20px;\n    max-width: 200px;\n    padding: 10px 20px;\n    border-radius: 8px;\n    border: none;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    font-size: 24px;\n    font-weight: 400;\n    box-shadow: 5px 5px 6px 1px rgba(34, 60, 80, 0.2); \n    background-color: #6e6e6e;\n    color: #fff;\n    ransition: background-color 500ms linear;  \n    &:hover,\n    &:focus{\n    color: #fff;\n    background-color: #3e3e3e;\n    transform: scale(1.10);\n}\n`","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {Form, Input, Label, Button} from './ContactForm.styled';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/Contacts/contacts.selectors';\nimport { addContactsThunk } from 'redux/Contacts/contacts.thunk';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const handleChangeName = event => {\n        setName(event.target.value);\n    }\n    const handleChangeNumber = event => {\n        setNumber(event.target.value);\n    }\n\n    const handelSubmit = event => {\n        event.preventDefault();\n        \n        const nameInArray =  contacts.find(\n            contacts  => contacts.name.toLowerCase() === name.toLowerCase()\n        );\n        if (nameInArray) {\n            alert(`${name} is already in contacts `)\n            return\n        } \n        const contact = {name, number, id: nanoid()};\n            dispatch(addContactsThunk(contact));\n        \n        setName('');\n        setNumber('');\n    }\n\n\n    return(\n        <Form onSubmit={handelSubmit}>\n            <Label>Name\n                <Input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={handleChangeName}\n                value={name}\n                />\n            </Label>\n            <Label>Number\n            <Input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={handleChangeNumber}\n                value={number}\n                />\n            </Label>\n            <Button type=\"submit\">Add contact</Button>\n        </Form>\n    )\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n`\nexport const Item = styled.li`\n    display: flex;\n    justify-content: space-between;\n    margin: 10px 0;\n    font-size: 18px;\n    font-weight: 500;\n`\nexport const DeleteBtn = styled.button`\n    max-width: 100px;\n    padding: 5px 10px;\n    border-radius: 8px;\n    border: none;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    font-size: 16px;\n    font-weight: 400;\n    box-shadow: 5px 5px 6px 1px rgba(34, 60, 80, 0.2); \n    background-color: #6e6e6e;\n    color: #fff;\n    ransition: background-color 500ms linear;  \n    &:hover,\n    &:focus{\n    color: #fff;\n    background-color: #3e3e3e;\n    transform: scale(1.05);\n`","import {List, Item, DeleteBtn} from './ContactList.styled'\n\nimport { useDispatch, useSelector} from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContactsThunk, getContactsThunk } from 'redux/Contacts/contacts.thunk';\nimport {  selectContacts, selectError, selectFilter, selectIsLoading } from 'redux/Contacts/contacts.selectors';\n\nexport const ContactList = () => {\n\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    \n    useEffect(() => {\n    dispatch(getContactsThunk());\n    }, [dispatch]);\n\n    const filteredContacts = contacts.filter(contact=>\n    contact.name.toLowerCase().includes(filter.toLowerCase()));\n\n    return(\n        <List>\n            {isLoading && !error && <b>Loading...</b>}\n            {error && <b>{error.message}</b>}\n            {filteredContacts.map(({id, name, number}) => (\n                <Item key={id}>{name}: {number}\n                <DeleteBtn\n                    type='button' onClick={() => dispatch(deleteContactsThunk(id))}>Delete\n                </DeleteBtn>\n                </Item>\n            ))}\n        </List>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;       \n    margin: 0 auto;\n    width: 40%;\n    height: 100%;\n    border-radius: 5px; \n    box-shadow: 7px 7px 9px 5px rgba(34, 60, 80, 0.2);\n    padding: 0px 30px 20px 30px;\n`\nexport const Title = styled.h1`\n    font-size: 32px;\n    font-weight: 600;\n    color: #000;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n`\n\nexport const SubTitle = styled.h1`\n    font-size: 28px;\n    font-weight: 600;\n    color: #000;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n`","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    font-size: 20px;\n    font-weight: 500;\n`\n\nexport const Input = styled.input`\n    font-size: 20px; \n    margin: 10px 0; \n    width: 250px;\n`","import { useDispatch} from 'react-redux';\nimport { contactsFilterAction } from './../../redux/Contacts/filter.slice';\nimport {Input, Label} from './Filter.styled'\n\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    \n    return(\n        <div>\n            <Label>Find contacts by name\n                <Input\n                autoComplete=\"off\"\n                type=\"text\"\n                name=\"filter\"\n                onChange={event => dispatch(contactsFilterAction(event.target.value.toLowerCase()))}\n                />\n            </Label>\n        </div>\n    )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/Contacts/contacts.selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container, Title, SubTitle } from './../components/App.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { getContactsThunk } from 'redux/Contacts/contacts.thunk';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n\n    useEffect(() => {\n        dispatch(getContactsThunk());\n    }, [dispatch]);\n\n    return (\n    <>\n        <Container>\n        <Title>Phonebook</Title>\n        <ContactForm/>\n        <SubTitle>Contacts</SubTitle>\n        <Filter/>\n        <div>{isLoading && 'Request in progress...'}</div>\n        <ContactList/> \n      </Container>\n    </>\n    );\n}"],"names":["Label","styled","Input","Form","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","nameInArray","find","toLowerCase","alert","contact","id","nanoid","addContactsThunk","type","pattern","title","required","onChange","target","value","List","Item","DeleteBtn","ContactList","useEffect","getContactsThunk","filteredContacts","includes","message","map","onClick","deleteContactsThunk","Container","Title","SubTitle","Filter","autoComplete","contactsFilterAction","Contacts"],"sourceRoot":""}