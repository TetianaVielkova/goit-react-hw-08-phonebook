{"version":3,"file":"static/js/770.a611e137.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","../node_modules/nanoid/index.browser.js","redux/Contacts/contacts.selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;       \n    margin: 30px auto;\n    width: 40%;\n    height: 100%;\n    border-radius: 5px; \n    box-shadow: 10px 10px 12px 15px rgba(34, 60, 80, 0.3);\n    padding: 0px 30px 20px 30px;\n`\nexport const Title = styled.h1`\n    font-size: 42px;\n    color: #f1ee32;\n    font-weight: 700;\n    text-align: center;\n`\n\n\nexport const SubTitle = styled.h2`\nfont-size: 38px;\ncolor: #f1ee32;\nfont-weight: 700;\ntext-align: center;\n`\nexport const HomeTitle = styled.h2`\n    position: absolute\n    top: 70%;\n    left: 0;\n    right: 0;\n    \n    color: #FFF;\n    text-align: center;\n    font-family: 'Lato',sans-serif;\n    font-weight: 300;\n    font-size: 55px;\n    letter-spacing: 10px;\n    \n    margin-top: 60px;\n    padding-left: 10px;\n    background: -webkit-linear-gradient(white, #38495a);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;`","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    width: 320px;\n    margin: 0 auto;\n`\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\ncolor: #fff;\nmargin-bottom: 16px;\nfont-weight: 700;\n`\n\nexport const Input = styled.input`\n    padding: 15px;\n    margin-bottom: 15px;\n    margin-top: 8px;\n    border-radius: 10px;\n`\nexport const Button = styled.button`\n  background-color: #f1ee32;\n  display: block;\n  border-radius: 100px;\n  font-size: 20px;\n  font-weight: 700;\n  box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: CerebriSans-Regular,-apple-system,system-ui,Roboto,sans-serif;\n  padding: 10px 40px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n&:hover {\n  box-shadow: rgba(44,187,99,.35) 0 -25px 18px -14px inset,rgba(44,187,99,.25) 0 1px 2px,rgba(44,187,99,.25) 0 2px 4px,rgba(44,187,99,.25) 0 4px 8px,rgba(44,187,99,.25) 0 8px 16px,rgba(44,187,99,.25) 0 16px 32px;\n  transform: scale(1.05) rotate(-1deg);\n}\n`","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {Form, Input, Label, Button} from './ContactForm.styled';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/Contacts/contacts.selectors';\nimport { addContactsThunk } from 'redux/Contacts/contacts.thunk';\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const handleChangeName = event => {\n        setName(event.target.value);\n    }\n    const handleChangeNumber = event => {\n        setNumber(event.target.value);\n    }\n\n    const handelSubmit = event => {\n        event.preventDefault();\n        \n        const nameInArray =  contacts.find(\n            contacts  => contacts.name.toLowerCase() === name.toLowerCase()\n        );\n        if (nameInArray) {\n            alert(`${name} is already in contacts `)\n            return\n        } \n        const contact = {name, number, id: nanoid()};\n            dispatch(addContactsThunk(contact));\n        \n        setName('');\n        setNumber('');\n    }\n\n\n    return(\n        <Form onSubmit={handelSubmit}>\n            <Label>Name\n                <Input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                onChange={handleChangeName}\n                value={name}\n                />\n            </Label>\n            <Label>Number\n            <Input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                onChange={handleChangeNumber}\n                value={number}\n                />\n            </Label>\n            <Button type=\"submit\">Add contact</Button>\n        </Form>\n    )\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n`\nexport const Item = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 10px 0;\n    font-size: 24px;\n    font-weight: 500;\n`\n\nexport const DeleteBtn = styled.button`\n  background-color: #f1ee32;\n  display: block;\n  border-radius: 100px;\n  font-size: 20px;\n  font-weight: 700;\n  box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: CerebriSans-Regular,-apple-system,system-ui,Roboto,sans-serif;\n  padding: 10px 40px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n&:hover {\n  box-shadow: rgba(44,187,99,.35) 0 -25px 18px -14px inset,rgba(44,187,99,.25) 0 1px 2px,rgba(44,187,99,.25) 0 2px 4px,rgba(44,187,99,.25) 0 4px 8px,rgba(44,187,99,.25) 0 8px 16px,rgba(44,187,99,.25) 0 16px 32px;\n  transform: scale(1.05) rotate(-1deg);\n}\n`","import {List, Item, DeleteBtn} from './ContactList.styled'\n\nimport { useDispatch, useSelector} from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContactsThunk, getContactsThunk } from 'redux/Contacts/contacts.thunk';\nimport {  selectContacts, selectError, selectFilter, selectIsLoading } from 'redux/Contacts/contacts.selectors';\n\nexport const ContactList = () => {\n\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    \n    useEffect(() => {\n    dispatch(getContactsThunk());\n    }, [dispatch]);\n\n    const filteredContacts = contacts.filter(contact=>\n    contact.name.toLowerCase().includes(filter.toLowerCase()));\n\n    return(\n        <List>\n            {isLoading && !error && <b>Loading...</b>}\n            {error && <b>{error.message}</b>}\n            {filteredContacts.map(({id, name, number}) => (\n                <Item key={id}>{name}: {number}\n                <DeleteBtn\n                    type='button' onClick={() => dispatch(deleteContactsThunk(id))}>Delete\n                </DeleteBtn>\n                </Item>\n            ))}\n        </List>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\ncolor: #fff;\nmargin-bottom: 16px;\nfont-weight: 700;\n`\n\nexport const Input = styled.input`\n    padding: 15px;\n    margin-bottom: 15px;\n    margin-top: 8px;\n    border-radius: 10px;\n`\n\nexport const Form = styled.form`\n    width: 320px;\n    margin: 0 auto;\n    \n`","import { useDispatch} from 'react-redux';\nimport { contactsFilterAction } from './../../redux/Contacts/filter.slice';\nimport {Input, Label, Form} from './Filter.styled'\n\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    \n    return(\n        <Form>\n            <Label>Find contacts by name\n                <Input\n                autoComplete=\"off\"\n                type=\"text\"\n                name=\"filter\"\n                onChange={event => dispatch(contactsFilterAction(event.target.value.toLowerCase()))}\n                />\n            </Label>\n        </Form>\n    )\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/Contacts/contacts.selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container, Title, SubTitle } from './../components/App.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { getContactsThunk } from 'redux/Contacts/contacts.thunk';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n\n    useEffect(() => {\n        dispatch(getContactsThunk());\n    }, [dispatch]);\n\n    return (\n    <>\n        <Container>\n        <Title>Phonebook</Title>\n        <ContactForm/>\n        <SubTitle>Contacts</SubTitle>\n        <Filter/>\n        <div>{isLoading}</div>\n        <ContactList/> \n      </Container>\n    </>\n    );\n}"],"names":["Container","styled","Title","SubTitle","HomeTitle","Form","Label","Input","Button","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","nameInArray","find","toLowerCase","alert","contact","addContactsThunk","type","pattern","title","required","onChange","target","value","List","Item","DeleteBtn","ContactList","useEffect","getContactsThunk","filteredContacts","includes","message","map","onClick","deleteContactsThunk","Filter","autoComplete","contactsFilterAction","Contacts"],"sourceRoot":""}